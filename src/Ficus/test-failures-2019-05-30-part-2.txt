  X Just a few/Long-running tests, skipped by default/split+join recreates same vector [24m 18s]                                                                                                                                              
  Error Message:
   
Failed after 107 tests. Parameters:
	RRBPersistentVector<length=28722,shift=10,tailOffset=28696,root=RelaxedNode(length=32, sizetable=[|1009; 1821; 2808; 3662; 4595; 5491; 6274; 7212; 8101; 9123; 10140; 10916;
  11815; 12697; 13638; 14594; 15449; 16415; 17091; 18114; 18992; 19929; 20753;
  21668; 22630; 23299; 24271; 25238; 25900; 26877; 27837; 28696|], children=[|RelaxedNode(length=32, sizetable=[|32; 64; 96; 128; 160; 192; 222; 254; 286; 318; 350; 382; 414; 446; 478; 510;
  542; 574; 606; 633; 665; 697; 729; 761; 789; 821; 853; 885; 917; 949; 977;
  1009|], children=[|L32; L32; L32; L32; L32; L32; L30; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L27; L32; L32; L32; L32; L28; L32; L32; L32; L32; L32; L28; L32|]);
  RelaxedNode(length=26, sizetable=[|32; 64; 96; 124; 154; 186; 218; 250; 282; 312; 340; 372; 404; 436; 468; 498;
  530; 557; 589; 621; 653; 685; 716; 748; 780; 812|], children=[|L32; L32; L32; L28; L30; L32; L32; L32; L32; L30; L28; L32; L32; L32; L32; L30;
  L32; L27; L32; L32; L32; L32; L31; L32; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 62; 94; 125; 157; 188; 220; 252; 284; 316; 348; 380; 412; 444; 476; 508;
  540; 572; 604; 636; 668; 699; 731; 763; 795; 827; 859; 891; 923; 955; 987|], children=[|L32; L30; L32; L31; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=27, sizetable=[|32; 62; 94; 126; 158; 190; 222; 254; 286; 318; 350; 382; 414; 446; 478; 509;
  541; 573; 602; 634; 666; 698; 730; 761; 790; 822; 854|], children=[|L32; L30; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L31;
  L32; L32; L29; L32; L32; L32; L32; L31; L29; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|29; 57; 87; 115; 145; 177; 202; 232; 259; 291; 323; 354; 380; 412; 440; 470;
  493; 519; 550; 580; 609; 636; 665; 693; 725; 756; 783; 812; 844; 872; 904; 933|], children=[|L29; L28; L30; L28; L30; L32; L25; L30; L27; L32; L32; L31; L26; L32; L28; L30;
  L23; L26; L31; L30; L29; L27; L29; L28; L32; L31; L27; L29; L32; L28; L32; L29|]);
  FullNode(length=28, children=[|L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=27, sizetable=[|32; 64; 93; 123; 151; 183; 214; 243; 275; 304; 333; 359; 385; 409; 435; 458;
  485; 516; 546; 572; 604; 636; 660; 689; 719; 751; 783|], children=[|L32; L32; L29; L30; L28; L32; L31; L29; L32; L29; L29; L26; L26; L24; L26; L23;
  L27; L31; L30; L26; L32; L32; L24; L29; L30; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|29; 56; 88; 119; 144; 176; 206; 236; 268; 291; 319; 351; 382; 412; 439; 468;
  497; 529; 559; 589; 621; 648; 678; 708; 738; 770; 794; 825; 857; 885; 915; 938|], children=[|L29; L27; L32; L31; L25; L32; L30; L30; L32; L23; L28; L32; L31; L30; L27; L29;
  L29; L32; L30; L30; L32; L27; L30; L30; L30; L32; L24; L31; L32; L28; L30; L23|]);
  RelaxedNode(length=30, sizetable=[|31; 62; 93; 122; 151; 183; 214; 246; 278; 308; 339; 364; 386; 414; 446; 478;
  510; 542; 573; 595; 622; 651; 683; 715; 747; 779; 803; 829; 857; 889|], children=[|L31; L31; L31; L29; L29; L32; L31; L32; L32; L30; L31; L25; L22; L28; L32; L32;
  L32; L32; L31; L22; L27; L29; L32; L32; L32; L32; L24; L26; L28; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 64; 96; 126; 158; 190; 222; 254; 286; 318; 350; 382; 414; 446; 478; 510;
  542; 574; 606; 638; 670; 702; 734; 766; 798; 830; 862; 894; 926; 958; 990;
  1022|], children=[|L32; L32; L32; L30; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 64; 96; 128; 159; 191; 223; 255; 287; 319; 351; 383; 415; 442; 474; 506;
  538; 570; 602; 634; 666; 697; 729; 761; 793; 825; 857; 889; 921; 953; 985;
  1017|], children=[|L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L27; L32; L32;
  L32; L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=27, sizetable=[|32; 60; 88; 114; 146; 178; 210; 242; 270; 297; 324; 354; 380; 409; 436; 467;
  499; 526; 550; 571; 594; 618; 650; 682; 712; 744; 776|], children=[|L32; L28; L28; L26; L32; L32; L32; L32; L28; L27; L27; L30; L26; L29; L27; L31;
  L32; L27; L24; L21; L23; L24; L32; L32; L30; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 55; 75; 96; 126; 157; 187; 214; 241; 271; 300; 332; 363; 391; 416; 447;
  479; 511; 543; 575; 607; 635; 662; 690; 717; 749; 776; 803; 835; 867; 899|], children=[|L32; L23; L20; L21; L30; L31; L30; L27; L27; L30; L29; L32; L31; L28; L25; L31;
  L32; L32; L32; L32; L32; L28; L27; L28; L27; L32; L27; L27; L32; L32; L32|]);
  RelaxedNode(length=30, sizetable=[|32; 64; 96; 128; 153; 178; 205; 237; 267; 299; 331; 363; 384; 407; 435; 467;
  499; 531; 563; 587; 615; 643; 672; 704; 735; 767; 799; 828; 854; 882|], children=[|L32; L32; L32; L32; L25; L25; L27; L32; L30; L32; L32; L32; L21; L23; L28; L32;
  L32; L32; L32; L24; L28; L28; L29; L32; L31; L32; L32; L29; L26; L28|]);
  RelaxedNode(length=32, sizetable=[|26; 55; 87; 115; 143; 175; 203; 234; 266; 292; 319; 348; 378; 410; 442; 472;
  498; 526; 556; 588; 618; 642; 674; 705; 735; 762; 788; 817; 847; 878; 909; 941|], children=[|L26; L29; L32; L28; L28; L32; L28; L31; L32; L26; L27; L29; L30; L32; L32; L30;
  L26; L28; L30; L32; L30; L24; L32; L31; L30; L27; L26; L29; L30; L31; L31; L32|]);
  RelaxedNode(length=32, sizetable=[|27; 57; 84; 115; 145; 171; 202; 234; 266; 297; 329; 359; 386; 418; 449; 477;
  509; 539; 570; 597; 627; 659; 691; 719; 747; 776; 804; 834; 866; 892; 924; 956|], children=[|L27; L30; L27; L31; L30; L26; L31; L32; L32; L31; L32; L30; L27; L32; L31; L28;
  L32; L30; L31; L27; L30; L32; L32; L28; L28; L29; L28; L30; L32; L26; L32; L32|]);
  RelaxedNode(length=29, sizetable=[|28; 57; 89; 118; 149; 179; 205; 232; 263; 295; 327; 359; 391; 420; 442; 472;
  504; 536; 566; 592; 624; 650; 678; 710; 739; 771; 803; 828; 855|], children=[|L28; L29; L32; L29; L31; L30; L26; L27; L31; L32; L32; L32; L32; L29; L22; L30;
  L32; L32; L30; L26; L32; L26; L28; L32; L29; L32; L32; L25; L27|]);
  RelaxedNode(length=32, sizetable=[|27; 57; 87; 119; 151; 180; 209; 241; 269; 301; 328; 358; 390; 422; 452; 479;
  508; 539; 571; 603; 630; 660; 692; 722; 754; 781; 813; 840; 870; 902; 934; 966|], children=[|L27; L30; L30; L32; L32; L29; L29; L32; L28; L32; L27; L30; L32; L32; L30; L27;
  L29; L31; L32; L32; L27; L30; L32; L30; L32; L27; L32; L27; L30; L32; L32; L32|]);
  RelaxedNode(length=24, sizetable=[|30; 61; 87; 112; 144; 175; 207; 230; 256; 287; 319; 344; 366; 396; 427; 459;
  483; 506; 536; 567; 599; 622; 646; 676|], children=[|L30; L31; L26; L25; L32; L31; L32; L23; L26; L31; L32; L25; L22; L30; L31; L32;
  L24; L23; L30; L31; L32; L23; L24; L30|]);
  RelaxedNode(length=32, sizetable=[|32; 64; 96; 128; 160; 192; 224; 256; 288; 320; 352; 384; 416; 448; 480; 512;
  544; 576; 608; 640; 672; 704; 735; 767; 799; 831; 863; 895; 927; 959; 991;
  1023|], children=[|L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=30, sizetable=[|32; 64; 83; 109; 141; 173; 205; 237; 269; 292; 320; 344; 376; 408; 440; 472;
  504; 526; 553; 585; 615; 647; 679; 708; 735; 756; 782; 814; 846; 878|], children=[|L32; L32; L19; L26; L32; L32; L32; L32; L32; L23; L28; L24; L32; L32; L32; L32;
  L32; L22; L27; L32; L30; L32; L32; L29; L27; L21; L26; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 58; 86; 114; 146; 177; 206; 236; 267; 296; 328; 355; 382; 413; 442; 468;
  496; 527; 558; 590; 622; 653; 683; 712; 739; 769; 795; 825; 855; 882; 909; 937|], children=[|L32; L26; L28; L28; L32; L31; L29; L30; L31; L29; L32; L27; L27; L31; L29; L26;
  L28; L31; L31; L32; L32; L31; L30; L29; L27; L30; L26; L30; L30; L27; L27; L28|]);
  RelaxedNode(length=28, sizetable=[|28; 59; 91; 123; 151; 183; 210; 242; 274; 301; 327; 359; 388; 416; 448; 480;
  504; 534; 563; 589; 621; 652; 684; 706; 734; 760; 792; 824|], children=[|L28; L31; L32; L32; L28; L32; L27; L32; L32; L27; L26; L32; L29; L28; L32; L32;
  L24; L30; L29; L26; L32; L31; L32; L22; L28; L26; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 59; 84; 116; 148; 180; 211; 239; 267; 299; 331; 363; 395; 426; 450; 473;
  499; 530; 562; 592; 622; 650; 681; 709; 741; 773; 797; 822; 851; 883; 915|], children=[|L32; L27; L25; L32; L32; L32; L31; L28; L28; L32; L32; L32; L32; L31; L24; L23;
  L26; L31; L32; L30; L30; L28; L31; L28; L32; L32; L24; L25; L29; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|30; 60; 90; 122; 152; 178; 209; 241; 272; 304; 331; 362; 393; 423; 451; 480;
  512; 540; 572; 604; 636; 668; 698; 724; 756; 788; 820; 846; 873; 903; 933; 962|], children=[|L30; L30; L30; L32; L30; L26; L31; L32; L31; L32; L27; L31; L31; L30; L28; L29;
  L32; L28; L32; L32; L32; L32; L30; L26; L32; L32; L32; L26; L27; L30; L30; L29|]);
  RelaxedNode(length=23, sizetable=[|28; 60; 79; 111; 143; 171; 196; 228; 257; 289; 321; 353; 373; 400; 428; 456;
  488; 520; 547; 573; 605; 637; 669|], children=[|L28; L32; L19; L32; L32; L28; L25; L32; L29; L32; L32; L32; L20; L27; L28; L28;
  L32; L32; L27; L26; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|31; 63; 90; 122; 151; 183; 215; 247; 279; 309; 339; 369; 396; 428; 457; 488;
  520; 550; 582; 607; 639; 669; 695; 727; 755; 787; 819; 844; 876; 908; 940; 972|], children=[|L31; L32; L27; L32; L29; L32; L32; L32; L32; L30; L30; L30; L27; L32; L29; L31;
  L32; L30; L32; L25; L32; L30; L26; L32; L28; L32; L32; L25; L32; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|29; 61; 93; 125; 157; 182; 213; 243; 274; 306; 332; 364; 395; 427; 454; 482;
  514; 545; 577; 603; 631; 660; 691; 723; 754; 786; 818; 849; 881; 910; 935; 967|], children=[|L29; L32; L32; L32; L32; L25; L31; L30; L31; L32; L26; L32; L31; L32; L27; L28;
  L32; L31; L32; L26; L28; L29; L31; L32; L31; L32; L32; L31; L32; L29; L25; L32|]);
  RelaxedNode(length=22, sizetable=[|30; 62; 93; 123; 154; 180; 212; 240; 272; 304; 334; 366; 392; 424; 455; 487;
  517; 544; 576; 598; 630; 662|], children=[|L30; L32; L31; L30; L31; L26; L32; L28; L32; L32; L30; L32; L26; L32; L31; L32;
  L30; L27; L32; L22; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 60; 86; 118; 150; 182; 214; 239; 271; 303; 335; 365; 396; 428; 456; 488;
  518; 550; 582; 609; 641; 672; 704; 736; 761; 793; 821; 853; 885; 913; 945; 977|], children=[|L32; L28; L26; L32; L32; L32; L32; L25; L32; L32; L32; L30; L31; L32; L28; L32;
  L30; L32; L32; L27; L32; L31; L32; L32; L25; L32; L28; L32; L32; L28; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 64; 96; 128; 160; 192; 224; 256; 288; 317; 343; 375; 407; 439; 471; 503;
  534; 563; 595; 627; 658; 690; 720; 752; 784; 816; 848; 880; 901; 928; 960|], children=[|L32; L32; L32; L32; L32; L32; L32; L32; L32; L29; L26; L32; L32; L32; L32; L32;
  L31; L29; L32; L32; L31; L32; L30; L32; L32; L32; L32; L32; L21; L27; L32|]);
  RelaxedNode(length=28, sizetable=[|32; 64; 91; 123; 155; 177; 209; 238; 268; 300; 332; 363; 395; 427; 454; 486;
  518; 548; 580; 612; 641; 673; 705; 733; 765; 797; 829; 859|], children=[|L32; L32; L27; L32; L32; L22; L32; L29; L30; L32; L32; L31; L32; L32; L27; L32;
  L32; L30; L32; L32; L29; L32; L32; L28; L32; L32; L32; L30|])|]),tail=[|-104; 73; -113; 148; -68; -112; -77; -121; -32; -76; 101; -85; 4; -40; 137;
  -49; 40; -4; 85; -13; 76; 32; 121; -7; 112; 68|]> -149
Shrunk 5 times to:
	RRBPersistentVector<length=28722,shift=10,tailOffset=28696,root=RelaxedNode(length=32, sizetable=[|1009; 1821; 2808; 3662; 4595; 5491; 6274; 7212; 8101; 9123; 10140; 10916;
  11815; 12697; 13638; 14594; 15449; 16415; 17091; 18114; 18992; 19929; 20753;
  21668; 22630; 23299; 24271; 25238; 25900; 26877; 27837; 28696|], children=[|RelaxedNode(length=32, sizetable=[|32; 64; 96; 128; 160; 192; 222; 254; 286; 318; 350; 382; 414; 446; 478; 510;
  542; 574; 606; 633; 665; 697; 729; 761; 789; 821; 853; 885; 917; 949; 977;
  1009|], children=[|L32; L32; L32; L32; L32; L32; L30; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L27; L32; L32; L32; L32; L28; L32; L32; L32; L32; L32; L28; L32|]);
  RelaxedNode(length=26, sizetable=[|32; 64; 96; 124; 154; 186; 218; 250; 282; 312; 340; 372; 404; 436; 468; 498;
  530; 557; 589; 621; 653; 685; 716; 748; 780; 812|], children=[|L32; L32; L32; L28; L30; L32; L32; L32; L32; L30; L28; L32; L32; L32; L32; L30;
  L32; L27; L32; L32; L32; L32; L31; L32; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 62; 94; 125; 157; 188; 220; 252; 284; 316; 348; 380; 412; 444; 476; 508;
  540; 572; 604; 636; 668; 699; 731; 763; 795; 827; 859; 891; 923; 955; 987|], children=[|L32; L30; L32; L31; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=27, sizetable=[|32; 62; 94; 126; 158; 190; 222; 254; 286; 318; 350; 382; 414; 446; 478; 509;
  541; 573; 602; 634; 666; 698; 730; 761; 790; 822; 854|], children=[|L32; L30; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L31;
  L32; L32; L29; L32; L32; L32; L32; L31; L29; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|29; 57; 87; 115; 145; 177; 202; 232; 259; 291; 323; 354; 380; 412; 440; 470;
  493; 519; 550; 580; 609; 636; 665; 693; 725; 756; 783; 812; 844; 872; 904; 933|], children=[|L29; L28; L30; L28; L30; L32; L25; L30; L27; L32; L32; L31; L26; L32; L28; L30;
  L23; L26; L31; L30; L29; L27; L29; L28; L32; L31; L27; L29; L32; L28; L32; L29|]);
  FullNode(length=28, children=[|L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=27, sizetable=[|32; 64; 93; 123; 151; 183; 214; 243; 275; 304; 333; 359; 385; 409; 435; 458;
  485; 516; 546; 572; 604; 636; 660; 689; 719; 751; 783|], children=[|L32; L32; L29; L30; L28; L32; L31; L29; L32; L29; L29; L26; L26; L24; L26; L23;
  L27; L31; L30; L26; L32; L32; L24; L29; L30; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|29; 56; 88; 119; 144; 176; 206; 236; 268; 291; 319; 351; 382; 412; 439; 468;
  497; 529; 559; 589; 621; 648; 678; 708; 738; 770; 794; 825; 857; 885; 915; 938|], children=[|L29; L27; L32; L31; L25; L32; L30; L30; L32; L23; L28; L32; L31; L30; L27; L29;
  L29; L32; L30; L30; L32; L27; L30; L30; L30; L32; L24; L31; L32; L28; L30; L23|]);
  RelaxedNode(length=30, sizetable=[|31; 62; 93; 122; 151; 183; 214; 246; 278; 308; 339; 364; 386; 414; 446; 478;
  510; 542; 573; 595; 622; 651; 683; 715; 747; 779; 803; 829; 857; 889|], children=[|L31; L31; L31; L29; L29; L32; L31; L32; L32; L30; L31; L25; L22; L28; L32; L32;
  L32; L32; L31; L22; L27; L29; L32; L32; L32; L32; L24; L26; L28; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 64; 96; 126; 158; 190; 222; 254; 286; 318; 350; 382; 414; 446; 478; 510;
  542; 574; 606; 638; 670; 702; 734; 766; 798; 830; 862; 894; 926; 958; 990;
  1022|], children=[|L32; L32; L32; L30; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 64; 96; 128; 159; 191; 223; 255; 287; 319; 351; 383; 415; 442; 474; 506;
  538; 570; 602; 634; 666; 697; 729; 761; 793; 825; 857; 889; 921; 953; 985;
  1017|], children=[|L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L27; L32; L32;
  L32; L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=27, sizetable=[|32; 60; 88; 114; 146; 178; 210; 242; 270; 297; 324; 354; 380; 409; 436; 467;
  499; 526; 550; 571; 594; 618; 650; 682; 712; 744; 776|], children=[|L32; L28; L28; L26; L32; L32; L32; L32; L28; L27; L27; L30; L26; L29; L27; L31;
  L32; L27; L24; L21; L23; L24; L32; L32; L30; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 55; 75; 96; 126; 157; 187; 214; 241; 271; 300; 332; 363; 391; 416; 447;
  479; 511; 543; 575; 607; 635; 662; 690; 717; 749; 776; 803; 835; 867; 899|], children=[|L32; L23; L20; L21; L30; L31; L30; L27; L27; L30; L29; L32; L31; L28; L25; L31;
  L32; L32; L32; L32; L32; L28; L27; L28; L27; L32; L27; L27; L32; L32; L32|]);
  RelaxedNode(length=30, sizetable=[|32; 64; 96; 128; 153; 178; 205; 237; 267; 299; 331; 363; 384; 407; 435; 467;
  499; 531; 563; 587; 615; 643; 672; 704; 735; 767; 799; 828; 854; 882|], children=[|L32; L32; L32; L32; L25; L25; L27; L32; L30; L32; L32; L32; L21; L23; L28; L32;
  L32; L32; L32; L24; L28; L28; L29; L32; L31; L32; L32; L29; L26; L28|]);
  RelaxedNode(length=32, sizetable=[|26; 55; 87; 115; 143; 175; 203; 234; 266; 292; 319; 348; 378; 410; 442; 472;
  498; 526; 556; 588; 618; 642; 674; 705; 735; 762; 788; 817; 847; 878; 909; 941|], children=[|L26; L29; L32; L28; L28; L32; L28; L31; L32; L26; L27; L29; L30; L32; L32; L30;
  L26; L28; L30; L32; L30; L24; L32; L31; L30; L27; L26; L29; L30; L31; L31; L32|]);
  RelaxedNode(length=32, sizetable=[|27; 57; 84; 115; 145; 171; 202; 234; 266; 297; 329; 359; 386; 418; 449; 477;
  509; 539; 570; 597; 627; 659; 691; 719; 747; 776; 804; 834; 866; 892; 924; 956|], children=[|L27; L30; L27; L31; L30; L26; L31; L32; L32; L31; L32; L30; L27; L32; L31; L28;
  L32; L30; L31; L27; L30; L32; L32; L28; L28; L29; L28; L30; L32; L26; L32; L32|]);
  RelaxedNode(length=29, sizetable=[|28; 57; 89; 118; 149; 179; 205; 232; 263; 295; 327; 359; 391; 420; 442; 472;
  504; 536; 566; 592; 624; 650; 678; 710; 739; 771; 803; 828; 855|], children=[|L28; L29; L32; L29; L31; L30; L26; L27; L31; L32; L32; L32; L32; L29; L22; L30;
  L32; L32; L30; L26; L32; L26; L28; L32; L29; L32; L32; L25; L27|]);
  RelaxedNode(length=32, sizetable=[|27; 57; 87; 119; 151; 180; 209; 241; 269; 301; 328; 358; 390; 422; 452; 479;
  508; 539; 571; 603; 630; 660; 692; 722; 754; 781; 813; 840; 870; 902; 934; 966|], children=[|L27; L30; L30; L32; L32; L29; L29; L32; L28; L32; L27; L30; L32; L32; L30; L27;
  L29; L31; L32; L32; L27; L30; L32; L30; L32; L27; L32; L27; L30; L32; L32; L32|]);
  RelaxedNode(length=24, sizetable=[|30; 61; 87; 112; 144; 175; 207; 230; 256; 287; 319; 344; 366; 396; 427; 459;
  483; 506; 536; 567; 599; 622; 646; 676|], children=[|L30; L31; L26; L25; L32; L31; L32; L23; L26; L31; L32; L25; L22; L30; L31; L32;
  L24; L23; L30; L31; L32; L23; L24; L30|]);
  RelaxedNode(length=32, sizetable=[|32; 64; 96; 128; 160; 192; 224; 256; 288; 320; 352; 384; 416; 448; 480; 512;
  544; 576; 608; 640; 672; 704; 735; 767; 799; 831; 863; 895; 927; 959; 991;
  1023|], children=[|L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=30, sizetable=[|32; 64; 83; 109; 141; 173; 205; 237; 269; 292; 320; 344; 376; 408; 440; 472;
  504; 526; 553; 585; 615; 647; 679; 708; 735; 756; 782; 814; 846; 878|], children=[|L32; L32; L19; L26; L32; L32; L32; L32; L32; L23; L28; L24; L32; L32; L32; L32;
  L32; L22; L27; L32; L30; L32; L32; L29; L27; L21; L26; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 58; 86; 114; 146; 177; 206; 236; 267; 296; 328; 355; 382; 413; 442; 468;
  496; 527; 558; 590; 622; 653; 683; 712; 739; 769; 795; 825; 855; 882; 909; 937|], children=[|L32; L26; L28; L28; L32; L31; L29; L30; L31; L29; L32; L27; L27; L31; L29; L26;
  L28; L31; L31; L32; L32; L31; L30; L29; L27; L30; L26; L30; L30; L27; L27; L28|]);
  RelaxedNode(length=28, sizetable=[|28; 59; 91; 123; 151; 183; 210; 242; 274; 301; 327; 359; 388; 416; 448; 480;
  504; 534; 563; 589; 621; 652; 684; 706; 734; 760; 792; 824|], children=[|L28; L31; L32; L32; L28; L32; L27; L32; L32; L27; L26; L32; L29; L28; L32; L32;
  L24; L30; L29; L26; L32; L31; L32; L22; L28; L26; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 59; 84; 116; 148; 180; 211; 239; 267; 299; 331; 363; 395; 426; 450; 473;
  499; 530; 562; 592; 622; 650; 681; 709; 741; 773; 797; 822; 851; 883; 915|], children=[|L32; L27; L25; L32; L32; L32; L31; L28; L28; L32; L32; L32; L32; L31; L24; L23;
  L26; L31; L32; L30; L30; L28; L31; L28; L32; L32; L24; L25; L29; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|30; 60; 90; 122; 152; 178; 209; 241; 272; 304; 331; 362; 393; 423; 451; 480;
  512; 540; 572; 604; 636; 668; 698; 724; 756; 788; 820; 846; 873; 903; 933; 962|], children=[|L30; L30; L30; L32; L30; L26; L31; L32; L31; L32; L27; L31; L31; L30; L28; L29;
  L32; L28; L32; L32; L32; L32; L30; L26; L32; L32; L32; L26; L27; L30; L30; L29|]);
  RelaxedNode(length=23, sizetable=[|28; 60; 79; 111; 143; 171; 196; 228; 257; 289; 321; 353; 373; 400; 428; 456;
  488; 520; 547; 573; 605; 637; 669|], children=[|L28; L32; L19; L32; L32; L28; L25; L32; L29; L32; L32; L32; L20; L27; L28; L28;
  L32; L32; L27; L26; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|31; 63; 90; 122; 151; 183; 215; 247; 279; 309; 339; 369; 396; 428; 457; 488;
  520; 550; 582; 607; 639; 669; 695; 727; 755; 787; 819; 844; 876; 908; 940; 972|], children=[|L31; L32; L27; L32; L29; L32; L32; L32; L32; L30; L30; L30; L27; L32; L29; L31;
  L32; L30; L32; L25; L32; L30; L26; L32; L28; L32; L32; L25; L32; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|29; 61; 93; 125; 157; 182; 213; 243; 274; 306; 332; 364; 395; 427; 454; 482;
  514; 545; 577; 603; 631; 660; 691; 723; 754; 786; 818; 849; 881; 910; 935; 967|], children=[|L29; L32; L32; L32; L32; L25; L31; L30; L31; L32; L26; L32; L31; L32; L27; L28;
  L32; L31; L32; L26; L28; L29; L31; L32; L31; L32; L32; L31; L32; L29; L25; L32|]);
  RelaxedNode(length=22, sizetable=[|30; 62; 93; 123; 154; 180; 212; 240; 272; 304; 334; 366; 392; 424; 455; 487;
  517; 544; 576; 598; 630; 662|], children=[|L30; L32; L31; L30; L31; L26; L32; L28; L32; L32; L30; L32; L26; L32; L31; L32;
  L30; L27; L32; L22; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 60; 86; 118; 150; 182; 214; 239; 271; 303; 335; 365; 396; 428; 456; 488;
  518; 550; 582; 609; 641; 672; 704; 736; 761; 793; 821; 853; 885; 913; 945; 977|], children=[|L32; L28; L26; L32; L32; L32; L32; L25; L32; L32; L32; L30; L31; L32; L28; L32;
  L30; L32; L32; L27; L32; L31; L32; L32; L25; L32; L28; L32; L32; L28; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 64; 96; 128; 160; 192; 224; 256; 288; 317; 343; 375; 407; 439; 471; 503;
  534; 563; 595; 627; 658; 690; 720; 752; 784; 816; 848; 880; 901; 928; 960|], children=[|L32; L32; L32; L32; L32; L32; L32; L32; L32; L29; L26; L32; L32; L32; L32; L32;
  L31; L29; L32; L32; L31; L32; L30; L32; L32; L32; L32; L32; L21; L27; L32|]);
  RelaxedNode(length=28, sizetable=[|32; 64; 91; 123; 155; 177; 209; 238; 268; 300; 332; 363; 395; 427; 454; 486;
  518; 548; 580; 612; 641; 673; 705; 733; 765; 797; 829; 859|], children=[|L32; L32; L27; L32; L32; L22; L32; L29; L30; L32; L32; L31; L32; L32; L27; L32;
  L32; L30; L32; L32; L29; L32; L32; L28; L32; L32; L32; L30|])|]),tail=[|-104; 73; -113; 148; -68; -112; -77; -121; -32; -76; 101; -85; 4; -40; 137;
  -49; 40; -4; 85; -13; 76; 32; 121; -7; 112; 68|]> 33
Result:
	Exception
  Expecto.AssertException: Joined vector RRBPersistentVector<length=28722,shift=15,tailOffset=28696,root=RelaxedNode(length=2, sizetable=[|2; 28665|], children=[|FullNode(length=1, children=[|FullNode(length=2, children=[|L32; L1|])|]);
  RelaxedNode(length=32, sizetable=[|976; 1788; 2775; 3629; 4562; 5458; 6241; 7179; 8068; 9090; 10107; 10883; 11782;
  12664; 13605; 14561; 15416; 16382; 17058; 18081; 18959; 19896; 20720; 21635;
  22597; 23266; 24238; 25205; 25867; 26844; 27804; 28663|], children=[|RelaxedNode(length=31, sizetable=[|31; 63; 95; 127; 159; 189; 221; 253; 285; 317; 349; 381; 413; 445; 477; 509;
  541; 573; 600; 632; 664; 696; 728; 756; 788; 820; 852; 884; 916; 944; 976|], children=[|L31; L32; L32; L32; L32; L30; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L27; L32; L32; L32; L32; L28; L32; L32; L32; L32; L32; L28; L32|]);
  RelaxedNode(length=26, sizetable=[|32; 64; 96; 124; 154; 186; 218; 250; 282; 312; 340; 372; 404; 436; 468; 498;
  530; 557; 589; 621; 653; 685; 716; 748; 780; 812|], children=[|L32; L32; L32; L28; L30; L32; L32; L32; L32; L30; L28; L32; L32; L32; L32; L30;
  L32; L27; L32; L32; L32; L32; L31; L32; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 62; 94; 125; 157; 188; 220; 252; 284; 316; 348; 380; 412; 444; 476; 508;
  540; 572; 604; 636; 668; 699; 731; 763; 795; 827; 859; 891; 923; 955; 987|], children=[|L32; L30; L32; L31; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=27, sizetable=[|32; 62; 94; 126; 158; 190; 222; 254; 286; 318; 350; 382; 414; 446; 478; 509;
  541; 573; 602; 634; 666; 698; 730; 761; 790; 822; 854|], children=[|L32; L30; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L31;
  L32; L32; L29; L32; L32; L32; L32; L31; L29; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|29; 57; 87; 115; 145; 177; 202; 232; 259; 291; 323; 354; 380; 412; 440; 470;
  493; 519; 550; 580; 609; 636; 665; 693; 725; 756; 783; 812; 844; 872; 904; 933|], children=[|L29; L28; L30; L28; L30; L32; L25; L30; L27; L32; L32; L31; L26; L32; L28; L30;
  L23; L26; L31; L30; L29; L27; L29; L28; L32; L31; L27; L29; L32; L28; L32; L29|]);
  FullNode(length=28, children=[|L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=27, sizetable=[|32; 64; 93; 123; 151; 183; 214; 243; 275; 304; 333; 359; 385; 409; 435; 458;
  485; 516; 546; 572; 604; 636; 660; 689; 719; 751; 783|], children=[|L32; L32; L29; L30; L28; L32; L31; L29; L32; L29; L29; L26; L26; L24; L26; L23;
  L27; L31; L30; L26; L32; L32; L24; L29; L30; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|29; 56; 88; 119; 144; 176; 206; 236; 268; 291; 319; 351; 382; 412; 439; 468;
  497; 529; 559; 589; 621; 648; 678; 708; 738; 770; 794; 825; 857; 885; 915; 938|], children=[|L29; L27; L32; L31; L25; L32; L30; L30; L32; L23; L28; L32; L31; L30; L27; L29;
  L29; L32; L30; L30; L32; L27; L30; L30; L30; L32; L24; L31; L32; L28; L30; L23|]);
  RelaxedNode(length=30, sizetable=[|31; 62; 93; 122; 151; 183; 214; 246; 278; 308; 339; 364; 386; 414; 446; 478;
  510; 542; 573; 595; 622; 651; 683; 715; 747; 779; 803; 829; 857; 889|], children=[|L31; L31; L31; L29; L29; L32; L31; L32; L32; L30; L31; L25; L22; L28; L32; L32;
  L32; L32; L31; L22; L27; L29; L32; L32; L32; L32; L24; L26; L28; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 64; 96; 126; 158; 190; 222; 254; 286; 318; 350; 382; 414; 446; 478; 510;
  542; 574; 606; 638; 670; 702; 734; 766; 798; 830; 862; 894; 926; 958; 990;
  1022|], children=[|L32; L32; L32; L30; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 64; 96; 128; 159; 191; 223; 255; 287; 319; 351; 383; 415; 442; 474; 506;
  538; 570; 602; 634; 666; 697; 729; 761; 793; 825; 857; 889; 921; 953; 985;
  1017|], children=[|L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L27; L32; L32;
  L32; L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=27, sizetable=[|32; 60; 88; 114; 146; 178; 210; 242; 270; 297; 324; 354; 380; 409; 436; 467;
  499; 526; 550; 571; 594; 618; 650; 682; 712; 744; 776|], children=[|L32; L28; L28; L26; L32; L32; L32; L32; L28; L27; L27; L30; L26; L29; L27; L31;
  L32; L27; L24; L21; L23; L24; L32; L32; L30; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 55; 75; 96; 126; 157; 187; 214; 241; 271; 300; 332; 363; 391; 416; 447;
  479; 511; 543; 575; 607; 635; 662; 690; 717; 749; 776; 803; 835; 867; 899|], children=[|L32; L23; L20; L21; L30; L31; L30; L27; L27; L30; L29; L32; L31; L28; L25; L31;
  L32; L32; L32; L32; L32; L28; L27; L28; L27; L32; L27; L27; L32; L32; L32|]);
  RelaxedNode(length=30, sizetable=[|32; 64; 96; 128; 153; 178; 205; 237; 267; 299; 331; 363; 384; 407; 435; 467;
  499; 531; 563; 587; 615; 643; 672; 704; 735; 767; 799; 828; 854; 882|], children=[|L32; L32; L32; L32; L25; L25; L27; L32; L30; L32; L32; L32; L21; L23; L28; L32;
  L32; L32; L32; L24; L28; L28; L29; L32; L31; L32; L32; L29; L26; L28|]);
  RelaxedNode(length=32, sizetable=[|26; 55; 87; 115; 143; 175; 203; 234; 266; 292; 319; 348; 378; 410; 442; 472;
  498; 526; 556; 588; 618; 642; 674; 705; 735; 762; 788; 817; 847; 878; 909; 941|], children=[|L26; L29; L32; L28; L28; L32; L28; L31; L32; L26; L27; L29; L30; L32; L32; L30;
  L26; L28; L30; L32; L30; L24; L32; L31; L30; L27; L26; L29; L30; L31; L31; L32|]);
  RelaxedNode(length=32, sizetable=[|27; 57; 84; 115; 145; 171; 202; 234; 266; 297; 329; 359; 386; 418; 449; 477;
  509; 539; 570; 597; 627; 659; 691; 719; 747; 776; 804; 834; 866; 892; 924; 956|], children=[|L27; L30; L27; L31; L30; L26; L31; L32; L32; L31; L32; L30; L27; L32; L31; L28;
  L32; L30; L31; L27; L30; L32; L32; L28; L28; L29; L28; L30; L32; L26; L32; L32|]);
  RelaxedNode(length=29, sizetable=[|28; 57; 89; 118; 149; 179; 205; 232; 263; 295; 327; 359; 391; 420; 442; 472;
  504; 536; 566; 592; 624; 650; 678; 710; 739; 771; 803; 828; 855|], children=[|L28; L29; L32; L29; L31; L30; L26; L27; L31; L32; L32; L32; L32; L29; L22; L30;
  L32; L32; L30; L26; L32; L26; L28; L32; L29; L32; L32; L25; L27|]);
  RelaxedNode(length=32, sizetable=[|27; 57; 87; 119; 151; 180; 209; 241; 269; 301; 328; 358; 390; 422; 452; 479;
  508; 539; 571; 603; 630; 660; 692; 722; 754; 781; 813; 840; 870; 902; 934; 966|], children=[|L27; L30; L30; L32; L32; L29; L29; L32; L28; L32; L27; L30; L32; L32; L30; L27;
  L29; L31; L32; L32; L27; L30; L32; L30; L32; L27; L32; L27; L30; L32; L32; L32|]);
  RelaxedNode(length=24, sizetable=[|30; 61; 87; 112; 144; 175; 207; 230; 256; 287; 319; 344; 366; 396; 427; 459;
  483; 506; 536; 567; 599; 622; 646; 676|], children=[|L30; L31; L26; L25; L32; L31; L32; L23; L26; L31; L32; L25; L22; L30; L31; L32;
  L24; L23; L30; L31; L32; L23; L24; L30|]);
  RelaxedNode(length=32, sizetable=[|32; 64; 96; 128; 160; 192; 224; 256; 288; 320; 352; 384; 416; 448; 480; 512;
  544; 576; 608; 640; 672; 704; 735; 767; 799; 831; 863; 895; 927; 959; 991;
  1023|], children=[|L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32; L32;
  L32; L32; L32; L32; L32; L32; L31; L32; L32; L32; L32; L32; L32; L32; L32; L32|]);
  RelaxedNode(length=30, sizetable=[|32; 64; 83; 109; 141; 173; 205; 237; 269; 292; 320; 344; 376; 408; 440; 472;
  504; 526; 553; 585; 615; 647; 679; 708; 735; 756; 782; 814; 846; 878|], children=[|L32; L32; L19; L26; L32; L32; L32; L32; L32; L23; L28; L24; L32; L32; L32; L32;
  L32; L22; L27; L32; L30; L32; L32; L29; L27; L21; L26; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 58; 86; 114; 146; 177; 206; 236; 267; 296; 328; 355; 382; 413; 442; 468;
  496; 527; 558; 590; 622; 653; 683; 712; 739; 769; 795; 825; 855; 882; 909; 937|], children=[|L32; L26; L28; L28; L32; L31; L29; L30; L31; L29; L32; L27; L27; L31; L29; L26;
  L28; L31; L31; L32; L32; L31; L30; L29; L27; L30; L26; L30; L30; L27; L27; L28|]);
  RelaxedNode(length=28, sizetable=[|28; 59; 91; 123; 151; 183; 210; 242; 274; 301; 327; 359; 388; 416; 448; 480;
  504; 534; 563; 589; 621; 652; 684; 706; 734; 760; 792; 824|], children=[|L28; L31; L32; L32; L28; L32; L27; L32; L32; L27; L26; L32; L29; L28; L32; L32;
  L24; L30; L29; L26; L32; L31; L32; L22; L28; L26; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 59; 84; 116; 148; 180; 211; 239; 267; 299; 331; 363; 395; 426; 450; 473;
  499; 530; 562; 592; 622; 650; 681; 709; 741; 773; 797; 822; 851; 883; 915|], children=[|L32; L27; L25; L32; L32; L32; L31; L28; L28; L32; L32; L32; L32; L31; L24; L23;
  L26; L31; L32; L30; L30; L28; L31; L28; L32; L32; L24; L25; L29; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|30; 60; 90; 122; 152; 178; 209; 241; 272; 304; 331; 362; 393; 423; 451; 480;
  512; 540; 572; 604; 636; 668; 698; 724; 756; 788; 820; 846; 873; 903; 933; 962|], children=[|L30; L30; L30; L32; L30; L26; L31; L32; L31; L32; L27; L31; L31; L30; L28; L29;
  L32; L28; L32; L32; L32; L32; L30; L26; L32; L32; L32; L26; L27; L30; L30; L29|]);
  RelaxedNode(length=23, sizetable=[|28; 60; 79; 111; 143; 171; 196; 228; 257; 289; 321; 353; 373; 400; 428; 456;
  488; 520; 547; 573; 605; 637; 669|], children=[|L28; L32; L19; L32; L32; L28; L25; L32; L29; L32; L32; L32; L20; L27; L28; L28;
  L32; L32; L27; L26; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|31; 63; 90; 122; 151; 183; 215; 247; 279; 309; 339; 369; 396; 428; 457; 488;
  520; 550; 582; 607; 639; 669; 695; 727; 755; 787; 819; 844; 876; 908; 940; 972|], children=[|L31; L32; L27; L32; L29; L32; L32; L32; L32; L30; L30; L30; L27; L32; L29; L31;
  L32; L30; L32; L25; L32; L30; L26; L32; L28; L32; L32; L25; L32; L32; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|29; 61; 93; 125; 157; 182; 213; 243; 274; 306; 332; 364; 395; 427; 454; 482;
  514; 545; 577; 603; 631; 660; 691; 723; 754; 786; 818; 849; 881; 910; 935; 967|], children=[|L29; L32; L32; L32; L32; L25; L31; L30; L31; L32; L26; L32; L31; L32; L27; L28;
  L32; L31; L32; L26; L28; L29; L31; L32; L31; L32; L32; L31; L32; L29; L25; L32|]);
  RelaxedNode(length=22, sizetable=[|30; 62; 93; 123; 154; 180; 212; 240; 272; 304; 334; 366; 392; 424; 455; 487;
  517; 544; 576; 598; 630; 662|], children=[|L30; L32; L31; L30; L31; L26; L32; L28; L32; L32; L30; L32; L26; L32; L31; L32;
  L30; L27; L32; L22; L32; L32|]);
  RelaxedNode(length=32, sizetable=[|32; 60; 86; 118; 150; 182; 214; 239; 271; 303; 335; 365; 396; 428; 456; 488;
  518; 550; 582; 609; 641; 672; 704; 736; 761; 793; 821; 853; 885; 913; 945; 977|], children=[|L32; L28; L26; L32; L32; L32; L32; L25; L32; L32; L32; L30; L31; L32; L28; L32;
  L30; L32; L32; L27; L32; L31; L32; L32; L25; L32; L28; L32; L32; L28; L32; L32|]);
  RelaxedNode(length=31, sizetable=[|32; 64; 96; 128; 160; 192; 224; 256; 288; 317; 343; 375; 407; 439; 471; 503;
  534; 563; 595; 627; 658; 690; 720; 752; 784; 816; 848; 880; 901; 928; 960|], children=[|L32; L32; L32; L32; L32; L32; L32; L32; L32; L29; L26; L32; L32; L32; L32; L32;
  L31; L29; L32; L32; L31; L32; L30; L32; L32; L32; L32; L32; L21; L27; L32|]);
  RelaxedNode(length=28, sizetable=[|32; 64; 91; 123; 155; 177; 209; 238; 268; 300; 332; 363; 395; 427; 454; 486;
  518; 548; 580; 612; 641; 673; 705; 733; 765; 797; 829; 859|], children=[|L32; L32; L27; L32; L32; L22; L32; L29; L30; L32; L32; L31; L32; L32; L27; L32;
  L32; L30; L32; L32; L29; L32; L32; L28; L32; L32; L32; L30|])|])|]),tail=[|-104; 73; -113; 148; -68; -112; -77; -121; -32; -76; 101; -85; 4; -40; 137;
  -49; 40; -4; 85; -13; 76; 32; 121; -7; 112; 68|]>
failed the following RRBVector invariants:
["The tail offset should equal (root.TreeSize this.Shift) at all times, unless the tail offset is 0";
 "The tree size of any node should match the total number of items its descendent leaves contain";
 "The size table of any tree node should match the cumulative tree sizes of its children"]
   at ExpectoTemplate.RRBVectorProps.checkAllProperties@375-1.Invoke(AssertException exn) in /home/rmunn/code/fsharp/ficus-staging/tests/Ficus.Tests/RRBVectorProps.fs:line 375
   at ExpectoTemplate.RRBVectorProps.checkAllProperties@375-2.Invoke(String x) in /home/rmunn/code/fsharp/ficus-staging/tests/Ficus.Tests/RRBVectorProps.fs:line 375
   at ExpectoTemplate.RRBVectorProps.checkAllProperties@375-5.Invoke(FSharpList`1 arg30) in /home/rmunn/code/fsharp/ficus-staging/tests/Ficus.Tests/RRBVectorProps.fs:line 375
   at ExpectoTemplate.RRBVectorProps.checkAllProperties[T](RRBVector`1 vec, String label) in /home/rmunn/code/fsharp/ficus-staging/tests/Ficus.Tests/RRBVectorProps.fs:line 375
   at ExpectoTemplate.RRBVectorProps.checkProperties[a](RRBVector`1 vec, String label) in /home/rmunn/code/fsharp/ficus-staging/tests/Ficus.Tests/RRBVectorProps.fs:line 378
   at ExpectoTemplate.RRBVectorExpectoTest.doJoinTest[a](RRBVector`1 v1, RRBVector`1 v2) in /home/rmunn/code/fsharp/ficus-staging/tests/Ficus.Tests/RRBVectorExpectoTest.fs:line 127
   at ExpectoTemplate.RRBVectorExpectoTest.doSplitTest[a](RRBVector`1 vec, Int32 i) in /home/rmunn/code/fsharp/ficus-staging/tests/Ficus.Tests/RRBVectorExpectoTest.fs:line 150
   at ExpectoTemplate.RRBVectorExpectoTest.longRunningTests@1337.Invoke(RRBVector`1 vec, Int32 i) in /home/rmunn/code/fsharp/ficus-staging/tests/Ficus.Tests/RRBVectorExpectoTest.fs:line 1339
   at FsCheck.Testable.evaluate[a,b](FSharpFunc`2 body, a a)
Focus on error:
	etestPropertyWithConfig (704273653, 296602124) "split+join recreates same vector"
